import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.util.*;

public class Main{
	
	public static void main (String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int[] numbers = new int[Integer.parseInt(st.nextToken())];
		
		if(numbers.length == 1) {
			st = new StringTokenizer(br.readLine());
			numbers[0] = Integer.parseInt(st.nextToken());
			System.out.println(numbers[0]);
			System.out.println(numbers[0]);
			System.out.println(numbers[0]);
			System.out.print(0);
		} else {
			for(int i = 0; i < numbers.length; i++) {
				st = new StringTokenizer(br.readLine());
				numbers[i] = Integer.parseInt(st.nextToken());
			}
			double sum = 0;
			
			for(int i = 0; i < numbers.length; i++) {
				sum += numbers[i];
				if(i == numbers.length-1) {
					System.out.println(Math.round(sum/numbers.length));
				}
			}
			
			
			Arrays.sort(numbers);
			System.out.println(numbers[numbers.length/2]);
			
			
			ArrayList<Integer> mode = new ArrayList<>();
			int mode_frequency = 1;
			
			for(int i = 0; i < numbers.length-1; i++) {
				if(numbers[i] == numbers[i+1]) {
					mode_frequency++;
					if(i == numbers.length-2) {
						mode.add(mode_frequency);
						mode_frequency = 1;
					}
				} else {
					mode.add(mode_frequency);
					mode_frequency = 1;
				}
			}
			
			Collections.sort(mode);
			
			int mode_value = 0;
			int mode_checker = 0;
			
			if(mode.get(mode.size()-1) == mode.get(mode.size()-2)) {
				for(int i = 0; i < numbers.length-1; i++) {
					if(numbers[i] == numbers[i+1]) {
						mode_frequency++;
					} else {
						mode_frequency = 1;
					}
					if(mode_frequency == mode.get(mode.size()-1) && mode_checker == 0) {
						mode_checker++;
						mode_frequency = 1;
					} else if (mode_frequency == mode.get(mode.size()-1) && mode_checker == 1) {
						System.out.println(numbers[i]);
						break;
					}
				}
			} else {
				for(int i = 0; i < numbers.length-1; i++) {
					if(numbers[i] == numbers[i+1]) {
						mode_frequency++;
					} else {
						mode_frequency = 1;
					}
					if(mode_frequency == mode.get(mode.size()-1)) {
						System.out.println(numbers[i]);
						break;
					}
				}
			}
			
			
			System.out.print(numbers[numbers.length-1] - numbers[0]);
		}	
	}
}
